
package serviceclient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CircleService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CircleService {


    /**
     * 
     * @param radius
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "circleArea", targetNamespace = "http://services/", className = "serviceclient.CircleArea")
    @ResponseWrapper(localName = "circleAreaResponse", targetNamespace = "http://services/", className = "serviceclient.CircleAreaResponse")
    @Action(input = "http://services/CircleService/circleAreaRequest", output = "http://services/CircleService/circleAreaResponse")
    public double circleArea(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

    /**
     * 
     * @param radius
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "circumFerence", targetNamespace = "http://services/", className = "serviceclient.CircumFerence")
    @ResponseWrapper(localName = "circumFerenceResponse", targetNamespace = "http://services/", className = "serviceclient.CircumFerenceResponse")
    @Action(input = "http://services/CircleService/circumFerenceRequest", output = "http://services/CircleService/circumFerenceResponse")
    public double circumFerence(
        @WebParam(name = "radius", targetNamespace = "")
        double radius);

}
